version: '3'
services:

# Note: now all the containers are on the same network - testing_net
# An idea for later would be to have two separate networks, one for each node,
# where the modules that need to communicate with each other are a part of both networks.

  federation-build:
    build:
      dockerfile: federation-docker-files/Federation_build
      context: ./
    image: federation-build

  mock-dns-server:
    build:
      context: ./fake-dns-server
      dockerfile: dns-dockerfile
    cap_add:
    - NET_ADMIN
    container_name: mock-dns-server
    hostname: mock-dns-server
    networks:
      testing_net:
        ipv4_address: 172.28.1.1
        aliases:
          - dsn.itsinterchange.eu

  local_db:
    image: postgres:9.6
    container_name: local_db
    depends_on:
      - mock-dns-server
    ports:
      - 32777:5432
    environment:
      - POSTGRES_USER=federation
      - POSTGRES_PASSWORD=federation
      - POSTGRES_DB=federation
    networks:
    - testing_net

  local_db_filler:
    build: ./test-data-helpers
    environment:
    - POSTGRES_URI=jdbc:postgresql://local_db:5432/federation
    - DB_HELPER_TYPE=subscriber
    container_name: local_db_filler
    hostname: local_db_filler
    depends_on:
    - local_db
    - federation-build
    networks:
    - testing_net

  local_interchange_app:
    build: ./interchangenode
    container_name: local_interchange_app
    hostname: local_interchange_app
    links:
    - "local_qpid:local.itsinterchange.eu"
    environment:
      AMQP_URI: amqp://local.itsinterchange.eu
      AMQP_USER: interchange
      AMQP_PASSWORD: "12345678"
      POSTGIS_URI: jdbc:postgresql://local_postgis:5432/geolookup
    depends_on:
      - local_postgis
    networks:
    - testing_net


  local_postgis:
    build: ./postgis
    environment:
    - POSTGRES_USER=geolookup
    - POSTGRES_PASSWORD=geolookup
    - POSTGRES_DB=geolookup
    container_name: local_postgis
    hostname: local_postgis
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "geolookup"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
    - 8899:5432
    networks:
    - testing_net

  local_qpid:
    build: ./qpid
    container_name: local_qpid
    ports:
      - 8080
      - 443
      - 63002:5671
      - 5672
    volumes:
      - "./qpid/local:/config"
      - "./tmp:/jks"
      - "./qpid/messages/local:/work/local/messages"
    environment:
      - CA_CERTIFICATE_FILE=/jks/keys/ca.itsinterchange.eu.crt
      - SERVER_CERTIFICATE_FILE=/jks/keys/local.itsinterchange.eu.crt
      - SERVER_PRIVATE_KEY_FILE=/jks/keys/local.itsinterchange.eu.key
      - VHOST_FILE=/config/vhost.json
      - GROUPS_FILE=/config/groups
      - PASSWD_FILE=/config/passwd
    networks:
    - testing_net

  local_neighbour_server:
    build: ./neighbour-server
    container_name: local_neighbour_server
    depends_on:
      - local_db
      - federation-build
    ports:
      - 8090
    volumes:
      - "./tmp:/jks"
    environment:
      - POSTGRES_URI=jdbc:postgresql://local_db:5432/federation
      - SERVER_NAME=local.itsinterchange.eu
      - NODE_PROVIDER_NAME=local.itsinterchange.eu # "my name"
      - DNS_TYPE=prod
      - DOMAIN_NAME=itsinterchange.eu
      - CTRL_CHNL_PORT=8090
    networks:
    - testing_net
    dns: 172.28.1.1

  local_routing_configurer:
    build: ./routing-configurer
    container_name: local_routing_configurer
    depends_on:
      - federation-build
      - local_db
    links:
      - "local_qpid:local.itsinterchange.eu"
    volumes:
      - "./tmp:/jks"
    environment:
      - POSTGRES_URI=jdbc:postgresql://local_db:5432/federation
      - BASE_URL=https://local.itsinterchange.eu
      - VHOST_NAME=local.itsinterchange.eu
      - TRUSTSTORE_NAME=/jks/keys/truststore.jks
      - TRUSTSTORE_PASSWORD=password
      - KEYSTORE_NAME=/jks/keys/local.itsinterchange.eu.p12
      - KEYSTORE_PASSWORD=password
      - KEY_PASSWORD=password
    networks:
    - testing_net

  local_neighbour_discoverer:
    build: ./neighbour-discoverer
    container_name: local_neighbour_discoverer
    depends_on:
      - local_db
      - federation-build
      - local_db_filler
    links:
     - "remote_neighbour_server:remote.itsinterchange.eu"
    volumes:
      - "./tmp:/jks"
    environment:
      - POSTGRES_URI=jdbc:postgresql://local_db:5432/federation
      - SERVER_NAME=local.itsinterchange.eu
      - NODE_PROVIDER_NAME=local.itsinterchange.eu # "my name"
      - DNS_TYPE=prod
      - DOMAIN_NAME=itsinterchange.eu
      - CTRL_CHNL_PORT=8090
    dns: 172.28.1.1
    networks:
    - testing_net

  local_message_forwarder_app:
    build: ./message-forwarder
    container_name: local_message_forwarder_app
    depends_on:
    - federation-build
    - local_db
    links:
    - "local_qpid:local.itsinterchange.eu"
    - "remote_qpid:remote.itsinterchange.eu"
    volumes:
    - "./tmp:/jks"
    environment:
    - POSTGRES_URI=jdbc:postgresql://local_db:5432/federation
    - KEY_STORE_FILE=/jks/keys/local.itsinterchange.eu.p12
    - KEY_STORE_PASSWORD=password
    - KEY_STORE_TYPE=PKCS12
    - TRUST_STORE_PATH=/jks/keys/truststore.jks
    - TRUST_STORE_PASSWORD=password
    - TRUST_STORE_TYPE=JKS
    - SERVER_NAME=local.itsinterchange.eu
    networks:
    - testing_net

  remote_db:
    image: postgres:9.6
    container_name: remote_db
    depends_on:
    - mock-dns-server
    ports:
      - 32778:5432
    environment:
      - POSTGRES_USER=federation
      - POSTGRES_PASSWORD=federation
      - POSTGRES_DB=federation
    networks:
    - testing_net

  remote_db_filler:
    build: ./test-data-helpers
    environment:
    - POSTGRES_URI=jdbc:postgresql://remote_db:5432/federation
    - DB_HELPER_TYPE=provider
    container_name: remote_db_filler
    hostname: remote_db_filler
    depends_on:
    - remote_db
    - federation-build
    networks:
    - testing_net

  remote_interchange_app:
    build: ./interchangenode
    container_name: remote_interchange_app
    hostname: remote_interchange_app
    links:
    - "remote_qpid:remote.itsinterchange.eu"
    environment:
      AMQP_URI: amqp://remote.itsinterchange.eu
      AMQP_USER: interchange
      AMQP_PASSWORD: "12345678"
      POSTGIS_URI: jdbc:postgresql://remote_postgis:5432/geolookup
    depends_on:
    - remote_postgis
    networks:
    - testing_net


  remote_postgis:
    build: ./postgis
    environment:
    - POSTGRES_USER=geolookup
    - POSTGRES_PASSWORD=geolookup
    - POSTGRES_DB=geolookup
    container_name: remote_postgis
    hostname: remote_postgis
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "geolookup"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
    - 6677:5432
    networks:
    - testing_net


  remote_neighbour_server:
    build: ./neighbour-server
    container_name: remote_neighbour_server
    depends_on:
      - remote_db
      - federation-build
    ports:
      - 8090
    volumes:
      - "./tmp:/jks"
    environment:
      - POSTGRES_URI=jdbc:postgresql://remote_db:5432/federation
      - SERVER_NAME=remote.itsinterchange.eu
      - NODE_PROVIDER_NAME=remote.itsinterchange.eu # "my name"
      - DNS_TYPE=prod
      - DOMAIN_NAME=itsinterchange.eu
      - CTRL_CHNL_PORT=8090
    networks:
      - testing_net
    dns: 172.28.1.1

  remote_neighbour_discoverer:
    build: ./neighbour-discoverer
    container_name: remote_neighbour_discoverer
    depends_on:
      - remote_db
      - federation-build
      - remote_db_filler
    links:
      - "local_neighbour_server:local.itsinterchange.eu"
    volumes:
      - "./tmp:/jks"
    environment:
      - POSTGRES_URI=jdbc:postgresql://remote_db:5432/federation
      - SERVER_NAME=remote.itsinterchange.eu
      - NODE_PROVIDER_NAME=remote.itsinterchange.eu # "my name"
      - DNS_TYPE=prod
      - DOMAIN_NAME=itsinterchange.eu
      - CTRL_CHNL_PORT=8090
    networks:
    - testing_net
    dns: 172.28.1.1

  remote_qpid:
    build: ./qpid
    container_name: remote_qpid
    ports:
      - 8080
      - 443
      - 63001:5671
      - 5672
    volumes:
      - "./qpid/remote:/config"
      - "./tmp:/jks"
      - "./qpid/messages/remote:/work/remote/messages"
    environment:
      - CA_CERTIFICATE_FILE=/jks/keys/ca.itsinterchange.eu.crt
      - SERVER_CERTIFICATE_FILE=/jks/keys/remote.itsinterchange.eu.crt
      - SERVER_PRIVATE_KEY_FILE=/jks/keys/remote.itsinterchange.eu.key
      - VHOST_FILE=/config/vhost.json
      - GROUPS_FILE=/config/groups
      - PASSWD_FILE=/config/passwd
    networks:
    - testing_net

  remote_routing_configurer:
    build: ./routing-configurer
    container_name: remote_routing_configurer
    depends_on:
      - federation-build
      - remote_db
    links:
      - "remote_qpid:remote.itsinterchange.eu"
    volumes:
      - "./tmp:/jks"
    environment:
      - POSTGRES_URI=jdbc:postgresql://remote_db:5432/federation
      - BASE_URL=https://remote.itsinterchange.eu
      - VHOST_NAME=remote.itsinterchange.eu
      - TRUSTSTORE_NAME=/jks/keys/truststore.jks
      - TRUSTSTORE_PASSWORD=password
      - KEYSTORE_NAME=/jks/keys/remote.itsinterchange.eu.p12
      - KEYSTORE_PASSWORD=password
      - KEY_PASSWORD=password
    networks:
    - testing_net

  remote_message_forwarder_app:
    build: ./message-forwarder
    container_name: remote_message_forwarder_app
    depends_on:
      - federation-build
      - remote_db
    links:
      - "local_qpid:local.itsinterchange.eu"
      - "remote_qpid:remote.itsinterchange.eu"
    volumes:
      - "./tmp:/jks"
    environment:
      - POSTGRES_URI=jdbc:postgresql://remote_db:5432/federation
      - KEY_STORE_FILE=/jks/keys/remote.itsinterchange.eu.p12
      - KEY_STORE_PASSWORD=password
      - KEY_STORE_TYPE=PKCS12
      - TRUST_STORE_PATH=/jks/keys/truststore.jks
      - TRUST_STORE_PASSWORD=password
      - TRUST_STORE_TYPE=JKS
      - SERVER_NAME=remote.itsinterchange.eu
    networks:
    - testing_net

  execute_test:
    build: ./federation-st
    volumes:
    - "./tmp:/jks"
    depends_on:
    - remote_message_forwarder_app
    networks:
      - testing_net

networks:
  testing_net:
    ipam:
      driver: default
      config:
      - subnet: 172.28.1.0/16


