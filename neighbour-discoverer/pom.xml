<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>net.nordicway.interchange</groupId>
    <artifactId>neighbour-discoverer</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>net.nordicway.interchange</groupId>
            <artifactId>neighbour-model</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.5</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>dnsjava</groupId>
            <artifactId>dnsjava</artifactId>
            <version>2.1.8</version>
        </dependency>


        <dependency>
            <groupId>org.apache.qpid</groupId>
            <artifactId>qpid-broker-core</artifactId>
            <version>7.0.6</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <useSystemClassLoader>false</useSystemClassLoader>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>false</fork>
                    <skip>false</skip>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>IT</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.22.1</version>
                        <configuration>
                            <useSystemClassLoader>false</useSystemClassLoader>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.27.2</version>


                        <configuration>
                            <containerNamePattern>%n</containerNamePattern>
                            <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                            <startParallel>true</startParallel>

                            <images>
                                <image>
                                    <alias>node1_db</alias>
                                    <name>node1_db</name>
                                    <build>
                                        <dockerFileDir>${project.basedir}/src/test/docker/server_db</dockerFileDir>
                                    </build>

                                    <run>
                                        <network>
                                            <name>test-network</name>
                                            <alias>node1_db</alias>
                                        </network>
                                        <ports>
                                            <port>5432</port>
                                        </ports>
                                        <env>
                                            <POSTGRES_USER>federation</POSTGRES_USER>
                                            <POSTGRES_PASSWORD>federation</POSTGRES_PASSWORD>
                                            <POSTGRES_DB>federation</POSTGRES_DB>
                                        </env>
                                        <wait>
                                            <time>5000</time>
                                        </wait>
                                    </run>
                                </image>

                                <image>
                                    <alias>node2_db</alias>
                                    <name>node2_db</name>
                                    <build>
                                        <dockerFileDir>${project.basedir}/src/test/docker/client_db</dockerFileDir>
                                    </build>

                                    <run>
                                        <network>
                                            <name>test-network</name>
                                            <alias>node2_db</alias>
                                        </network>
                                        <ports>
                                            <port>7070:5432</port>
                                        </ports>
                                        <env>
                                            <POSTGRES_USER>federation</POSTGRES_USER>
                                            <POSTGRES_PASSWORD>federation</POSTGRES_PASSWORD>
                                            <POSTGRES_DB>federation</POSTGRES_DB>
                                        </env>
                                        <wait>
                                            <time>5000</time>
                                        </wait>
                                    </run>
                                </image>

                                <image>
                                    <alias>server_node1</alias>
                                    <name>server_node1</name>
                                    <build>
                                        <dockerFileDir>${project.basedir}/../neighbour-server/</dockerFileDir>
                                    </build>
                                    <run>
                                        <network>
                                            <name>test-network</name>
                                            <alias>server_node1</alias>
                                        </network>
                                        <dependsOn>
                                            <container>node1_db</container>
                                        </dependsOn>
                                        <ports>
                                            <port>8090:8090</port>
                                        </ports>
                                        <env>
                                            <POSTGRES_URI>jdbc:postgresql://node1_db:5432/federation</POSTGRES_URI>
                                            <SERVER_NAME>localhost</SERVER_NAME>
                                        </env>
                                    </run>
                                </image>

                                <image>
                                    <alias>server_node2</alias>
                                    <name>server_node2</name>
                                    <build>
                                        <dockerFileDir>${project.basedir}/../neighbour-server/</dockerFileDir>
                                    </build>
                                    <run>
                                        <network>
                                            <name>test-network</name>
                                            <alias>server_node2</alias>
                                        </network>
                                        <dependsOn>
                                            <container>node2_db</container>
                                        </dependsOn>
                                        <ports>
                                            <port>8070:8090</port>
                                        </ports>
                                        <env>
                                            <POSTGRES_URI>jdbc:postgresql://node2_db:5432/federation</POSTGRES_URI>
                                            <SERVER_NAME>bouvet</SERVER_NAME>
                                        </env>
                                    </run>
                                </image>

                            </images>

                        </configuration>


                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>