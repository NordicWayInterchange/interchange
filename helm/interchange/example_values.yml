# Secrets:
key_store_password: password                                      # Key store password
trust_store_password: password                                    # Trust store password
interchange_password: not-a-secure-password                       # Password for the user that the interchange app uses to validate messages arriving on Qpid
admin_password: not-a-secure-password                             # Password for a Qpid administrative user
postgres_user: federation                                         # Database user
postgres_password: federation                                     # Database password
key_store: "test"                                                 # Name of key store file
trust_store: truststore.jks                                       # Name of trust store file

# Values:
external_name: example-node.itsinterchange.eu
static_external_ip: ""
self:                                                               # ------ General node settings ----------------
  domain_name: itsinterchange.eu
  tls_secret_name: example-node                                     # Name of the secret created with kubectl that contains the certificates and keys.
  control_channel_port: 443                                         # Specify the control channel port  for the Node
  secret_mount_path: /jks/keys/                                     # Location of certificates and keys
  service_provider_port: "4141"                                     # Port of the onboarding server REST controller
  nap_provider_port: "4242"                                         # Port of the onboarding server REST controller
  nap_name: nap.example-node.itsinterchange.eu                      # Name of the napcore user connected to the napcore server
  trust_store: "truststore.jks"                                     # Name of the trust store file
  key_store: "key_store.p12"                                        # Name of the key store file

                                                                    # ------ Component specific settings ----------
qpid:                                                               # Apache Qpid message broker
  image:
    repository: europe-west4-docker.pkg.dev/nw-shared-w3ml/nordic-way-interchange/qpid                  # Public container registry for Nordic Way where the docker images are located
    tag: "c6b1cf8"                                                  # Image tag for the Qpid-image
  expose_amqps: true                                                # Expose the AMPQS port for incoming messages.
  persistence:                                                      # Configure persistence of queues in Qpid
    enabled: true
    storageClassName: standard
    size: 10Gi
  memorydump:
    enabled: true                                                   # store a memory dump on persistent disk
  java_mem: -Xmx1g -XX:MaxDirectMemorySize=3g                       # memory instructions for qpid
neighbour_discoverer:                                               # Java application that posts capabilities and subscriptions to discovered neighbouring interchanges.
  replicas: 1
  image:
    repository: europe-west4-docker.pkg.dev/nw-shared-w3ml/nordic-way-interchange/neighbour-discoverer-app
    tag: "c6b1cf8"
  logging:
  - logger_name: .root
    level: info
database:                                                           # Database of neighbouring interchanges
  image:
    repository: postgres
    tag: 15.1
  postgres_db: federation                                           # Database name
  persistence:                                                      # Persistence settings for the database.
    enabled: true
    storageClassName: standard
    size: 3Gi
  pgdata: /var/lib/postgresql/data/pgdata
message_collector:
  replicas: 1
  image:
    repository: europe-west4-docker.pkg.dev/nw-shared-w3ml/nordic-way-interchange/message-collector-app
    tag: "c6b1cf8"
neighbour_server:                                                   # Java application running a REST endpoints that other neighbours contact us through
  replicas: 1
  image:
    repository: europe-west4-docker.pkg.dev/nw-shared-w3ml/nordic-way-interchange/neighbour-server-app
    tag: "c6b1cf8"
  logging:
  - logger_name: .root
    level: info
routing_configurer:                                                 # Java application that uses the Qpid API to configure routing of messages
  replicas: 1
  image:
    repository: europe-west4-docker.pkg.dev/nw-shared-w3ml/nordic-way-interchange/routing-configurer-app
    tag: "c6b1cf8"
  logging:
  - logger_name: .no.vegvesen
    level: debug
onboard_server:                                                     # Java application running a REST endpoint for managing Service Providers(create, read, update, delete)
  replicas: 1
  image:
    repository: europe-west4-docker.pkg.dev/nw-shared-w3ml/nordic-way-interchange/onboard-server-app
    tag: "c6b1cf8"
  logging:
  - logger_name: .root
    level: info
napcore_server:
  replicas: 1
  image:
    repository: europe-west4-docker.pkg.dev/nw-shared-w3ml/nordic-way-interchange/napcore-server-app
    tag: "c6b1cf8"
  logging:
  - logger_name: .root
    level: info
secret_dev_no:
  key_store: "test"
