name: Build and Push Docker Images

permissions:
  contents: read
  id-token: write

on:
  push:
  workflow_dispatch:
    inputs:
      git-ref:
        required: false
        description: 'Specified commit hash or branch name (Optional)'

jobs:
  validate-helm-chart:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:

      # Checkout the repository to the GitHub Actions runner
      - name: Checkout (Latest)
        uses: actions/checkout@v4
        if: github.event.inputs.git-ref == ''
      - name: Checkout (Custom commit or branch)
        uses: actions/checkout@v4
        if: github.event.inputs.git-ref != ''
        with:
          ref: ${{ github.event.inputs.git-ref }}

      - name: Setup helm
        uses: azure/setup-helm@v3.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Templating Interchange helm chart
        working-directory: ./helm/interchange
        run: |
          helm template -f example_values.yml .

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout (Latest)
        uses: actions/checkout@v4
        if: github.event.inputs.git-ref == ''
      - name: Checkout (Custom commit or branch)
        uses: actions/checkout@v4
        if: github.event.inputs.git-ref != ''
        with:
          ref: ${{ github.event.inputs.git-ref }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build with Maven and run integration tests
        run: mvn -B verify -Dorg.slf4j.simpleLogger.log.org.apache.maven=warn
        # Step that does cache save and restore
      - name: Save and restore cache
        id: maven-cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Checkout to interchange-swagger-docs
        if: github.ref == 'refs/heads/federation-master'
        uses: actions/checkout@v4
        with:
          repository: NordicWayInterchange/interchange-swagger-docs
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          path: interchange-swagger-docs

      - name: Push to github pages
        if: github.ref == 'refs/heads/federation-master'
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name = "GitHub Actions"
          cp /home/runner/work/interchange/interchange/onboard-server/target/swagger/swagger.json ./interchange-swagger-docs/swagger-onboard
          cp /home/runner/work/interchange/interchange/neighbour-server/target/swagger/swagger.json ./interchange-swagger-docs/swagger-neighbour
          cd interchange-swagger-docs
          git add --all
          git commit --allow-empty -m "Updated swagger.json"
          git push https://${{ secrets.REPO_ACCESS_TOKEN }}@github.com/NordicWayInterchange/interchange-swagger-docs.git --force
        working-directory: ./

      - name: Persist to workspace
        uses: actions/upload-artifact@v4
        with:
          name: interchange
          path: ./

  docker-push-svv:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        Images: [qpid,message-collector-app,neighbour-discoverer-app,neighbour-server-app,routing-configurer-app,onboard-server-app,napcore-server-app,onboard-rest-client,jms-client-sink-app,jms-client-source-app]
    defaults:
      run:
        shell: bash
    steps:
      - name: Download persisted workspace
        uses: actions/download-artifact@v4
        with:
          name: interchange

      - name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Setup Google CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 446.0.1'
          project_id: ${{ vars.PROJECT_ID }}

      - name: Login to Artifact Registry
        run: gcloud auth configure-docker ${{ vars.REGIONAL_ARTIFACT_REGISTRY_URL }} --quiet

      - name: Create tag
        run: |
          echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
          echo "BRANCH_TAG=$(git rev-parse --abbrev-ref HEAD)" >> "$GITHUB_ENV"

      - name: Build the Docker image
        run: |
          cd ./${{ matrix.Images }}          
          docker build . -t ${{ matrix.Images }} --build-arg JAR_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:evaluate -Dexpression=project.version -q -DforceStdout)

      - name: Push docker image to Google artifact registry
        run: |
          docker tag ${{ matrix.Images }} ${{ vars.REGIONAL_ARTIFACT_REGISTRY_URL }}/${{ vars.PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY_REPOSITORY }}/${{ matrix.Images }}:${{ env.IMAGE_TAG }}
          docker push --all-tags ${{ vars.REGIONAL_ARTIFACT_REGISTRY_URL }}/${{ vars.PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY_REPOSITORY }}/${{ matrix.Images }}
      - name: Push docker image to Github container registry
        run: | 
          docker tag ${{ matrix.Images }} ghcr.io/nordicwayinterchange/${{ matrix.Images }}:${{ env.IMAGE_TAG }}
          echo ${{ secrets.REPO_ACCESS_TOKEN }} | docker login ghcr.io -u "Github Actions" --password-stdin
          docker push --all-tags ghcr.io/nordicwayinterchange/${{ matrix.Images }}
