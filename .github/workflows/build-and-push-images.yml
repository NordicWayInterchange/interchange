name: Build and Push Docker Images

permissions:
  contents: read
  id-token: write

on:
  push:
    branches-ignore:
      - 'swagger-github-pages'
  workflow_dispatch:
    inputs:
      git-ref:
        required: false
        description: 'Specified commit hash or branch name (Optional)'

jobs:
  validate-helm-chart:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:

      # Checkout the repository to the GitHub Actions runner
      - name: Checkout (Latest)
        uses: actions/checkout@v3
        if: github.event.inputs.git-ref == ''
      - name: Checkout (Custom commit or branch)
        uses: actions/checkout@v3
        if: github.event.inputs.git-ref != ''
        with:
          ref: ${{ github.event.inputs.git-ref }}

      - name: Setup helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Templating Interchange helm chart
        working-directory: ./helm/interchange
        run: |
          helm template -f example_values.yml .

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout (Latest)
        uses: actions/checkout@v3
        if: github.event.inputs.git-ref == ''
      - name: Checkout (Custom commit or branch)
        uses: actions/checkout@v3
        if: github.event.inputs.git-ref != ''
        with:
          ref: ${{ github.event.inputs.git-ref }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven and run integration tests
        run: mvn verify -Dorg.slf4j.simpleLogger.log.org.apache.maven=warn
        # Step that does cache save and restore
      - name: Save and restore cache
        id: maven-cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Push to github pages
        run: |
          cp onboard-server/target/swagger/swagger.json onboard-server/src/test/resources/swagger.json
          git config --global user.email "actions@github.com"
          git config --global user.name = "GitHub Actions"
          git checkout -b swagger-github-pages
          git add --all
          git commit -m "Add swagger.json to resources"
          git push https://${{ secrets.REPO_ACCESS_TOKEN }}@github.com/NordicWayInterchange/interchange.git swagger-github-pages --quiet --follow-tags --force
        working-directory: ./

      - name: Persist to workspace
        uses: actions/upload-artifact@v3
        with:
          name: interchange
          path: ./

  docker-push-svv:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        Images: [qpid,message-collector-app,neighbour-discoverer-app,neighbour-server-app,routing-configurer-app,onboard-server-app,napcore-server-app]
    defaults:
      run:
        shell: bash
    steps:
      - name: Download persisted workspace
        uses: actions/download-artifact@v3
        with:
          name: interchange
      - name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Setup Google CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '446.0.1'
          project_id: ${{ vars.PROJECT_ID }}
      - name: Login to Artifact Registry
        run: gcloud auth configure-docker ${{ vars.REGIONAL_ARTIFACT_REGISTRY_URL }} --quiet
      - name: Create tag
        run: |
          echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
          echo "BRANCH_TAG=$(git rev-parse --abbrev-ref HEAD)" >> "$GITHUB_ENV"
      - name: Build the Docker image
        run: |
          cd ./${{ matrix.Images }}
          
          docker build . --tag ${{ vars.REGIONAL_ARTIFACT_REGISTRY_URL }}/${{ vars.PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY_REPOSITORY }}/${{ matrix.Images }}:${{ env.IMAGE_TAG }}
      - name: Push docker image
        run: docker push --all-tags ${{ vars.REGIONAL_ARTIFACT_REGISTRY_URL }}/${{ vars.PROJECT_ID }}/${{ vars.ARTIFACT_REGISTRY_REPOSITORY }}/${{ matrix.Images }}
